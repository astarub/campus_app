// Mocks generated by Mockito 5.4.5 from annotations
// in campus_app/test/pages/news/news_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:appwrite/appwrite.dart' as _i2;
import 'package:campus_app/pages/feed/news/news_datasource.dart' as _i4;
import 'package:campus_app/pages/feed/news/news_entity.dart' as _i6;
import 'package:hive/hive.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBox_1<E> extends _i1.SmartFake implements _i3.Box<E> {
  _FakeBox_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NewsDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockNewsDatasource extends _i1.Mock implements _i4.NewsDatasource {
  MockNewsDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get appwriteClient => (super.noSuchMethod(
        Invocation.getter(#appwriteClient),
        returnValue: _FakeClient_0(
          this,
          Invocation.getter(#appwriteClient),
        ),
      ) as _i2.Client);

  @override
  _i3.Box<dynamic> get rubnewsCache => (super.noSuchMethod(
        Invocation.getter(#rubnewsCache),
        returnValue: _FakeBox_1<dynamic>(
          this,
          Invocation.getter(#rubnewsCache),
        ),
      ) as _i3.Box<dynamic>);

  @override
  _i5.Future<List<Map<String, dynamic>>> getNewsFeed(String? locale) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNewsFeed,
          [locale],
        ),
        returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<void> writeNewsEntitiesToCache(List<_i6.NewsEntity>? entities) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeNewsEntitiesToCache,
          [entities],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> clearNewsEntityCache() => (super.noSuchMethod(
        Invocation.method(
          #clearNewsEntityCache,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  List<_i6.NewsEntity> readNewsEntitiesFromCach() => (super.noSuchMethod(
        Invocation.method(
          #readNewsEntitiesFromCach,
          [],
        ),
        returnValue: <_i6.NewsEntity>[],
      ) as List<_i6.NewsEntity>);
}
